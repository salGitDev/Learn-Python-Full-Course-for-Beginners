
05-11-2023 Python Full Course
00 - 9:00 Project Setup
09:00-10:25 Hello World Programm

!
print("Hello World")
!

01. 09:27-15:00 Drawing shapes

print("   /|")
print("  / |")
print(" /  |")
print("/___|")



15:01-24:20 Variables

character_name = "John"
character_age = "35"
print("There once was a man named  " + character_name + ",")
print("He was " + character_age + " years old.")
print("He really liked the name " + character_name + ",")
print("but didn't like being " + character_age + ".")

24:25-26-55 Data Types

num = 32
print(type(num))
floatNum = 32.5
print(type(floatNum))


boolean_num = True
print(boolean_num)

Working with strings 27:00-38:39

check_case = "SALIEU"
print(check_case.isupper())

print(len(check_case))
print(check_case[0])
print(check_case.index("E"))

Working with Numbers 38:40-48:20
print(2)
print(2.5 - .5)
print(2 % 2)

num = -1
print(abs(num))


print(pow(2, 4))
print(max(1, 2))
print(min(1, 2))
print(round(2.4))
print(round(2.5))
print(round(2.6))

from math import *
print(floor(3.9))
print(ceil(1.1))
print(sqrt(25))
print(sqrt(10))

Getting input from users 48:29-52:30
name = input("Enter your name: ")
print("Hello " + name + " !")

Basic Python Calculator 52:35-58:30
num1 = input("Enter a number: ")
num2 = input("Enter another number: ")

result1 = int(num1) + int(num2)
result2 = int(num1) - int(num2)
result3 = int(num1) / int(num2)
result4 = int(num1) % int(num2)

print(result1)
print(result2)
print(result3)
print(result4)

07-11-2023 Mad Lib Game 58:31-1:02
color = input("Enter a color: ")
plural_noun = input("Enter a plural Noun: ")
celebrity = input("Enter a celebrity: ")

print("Roses are " + color)
print(plural_noun + " are blue")
print("I love " + celebrity)

List 1:03-1:10:00
friends = ["Kevin", "Karen", "Jim"]
mixed_list = ["John Doe", 1, 1.2, True]
#loop through list
for i in mixed_list:
    print(i)
#return the 1st in the list
print(friends[0])
#from index 1 to the last
print(mixed_list[1:])
#from index 0 to the 2nd item
print(mixed_list[:2])
#modified any element from the list
mixed_list[0] = "Jane Doe"
print(mixed_list)

1:10:05-18:55 Fxns to modified list
lucky_numbers = [4, 8, 15, 16, 23, 42]
friends = ["Kevin", "Karen", "Jim", "Oscar", "Toby"]
#I can use extend to make one list
friends.extend(lucky_numbers)
print(friends)
lucky_numbers.extend(friends)
print(lucky_numbers)


#add items to d end of the list
friends.append("Salieu Jr.")
lucky_numbers.append("98%")
print(friends)
print(lucky_numbers)

#insert is used after an item from the list
friends.insert(5, "Ibrahim")
print(friends)
#remove an item
friends.remove("Jim")
print(friends)
#Clear removes all the items from the list
friends.clear()
print(friends)

#Pop removes the last item
friends.append("Kyle")
print(friends)
friends.pop()
print(friends)

friends = ["Kevin", "Karen", "Jim", "Oscar", "Salieu Jr."]
#check for index of an item
print(friends.index("Salieu Jr."))

friends = ["Kevin", "Karen", "Jim", "Oscar", "Salieu Jr.", "Salieu Jr."]
#how many times a value is in the list
print(friends.count("Salieu Jr."))

#sort the list in ascending order
friends.sort()
print(friends)

lucky_numbers = [4, 8, 5, 16, 23, 42]
lucky_numbers.sort()
print(lucky_numbers)
#reverse the list
lucky_numbers.reverse()
print(lucky_numbers)


#copy from alsist
friends = ["Kevin", "Karen", "Jim", "Oscar", "Salieu Jr.", "Salieu Jr."]
friend_copy = friends.copy()
print(friend_copy)

08-11-2023 Tuples 1:18:56-1:24:15
coordinates = (4, 5)
print(coordinates)
print(coordinates[1])
#immutable i.e
coordinates[1] = 10
#This code throws error

Functions 1:13:17-1:40:00
#Simple function

def say_hi():
    print("Hello User")
say_hi()

def say_hi(name):
    print("Hello " + name)
say_hi("Salieu Jr.")

def say_hi(name, age):
    print("Hello " + name + " you're " + age + " months old")
say_hi("Salieu Jr.", "9")


def cube(num):
    return num * num * num
print(cube(3))

If Statements 1:40:06-1:54:00

is_male = True
if is_male:
    print("You're a male")
else:
    print("You're not a male")

#two conditions true
is_male = True
is_tall = True
if is_male or is_tall:
    print("You're a male or tall or both")
else:
    print("You're neither male or tall")

#one condition is false
is_male = False
is_tall = True
if is_male or is_tall:
    print("You're a male or tall or both")
else:
    print("You're neither male or tall")

#both condition false
is_male = False
is_tall = False
if is_male or is_tall:
    print("You're a male or tall or both")
else:
    print("You're neither male or tall")





#both condition false
is_male = False
is_tall = False
if is_male and is_tall:
    print("You're a tall male")
elif is_male and not(is_tall):
    print("You're a short male")
elif not(is_male) and is_tall:
    print("You're not male and you're tall")
else:
    print("You're either not male or not tall or both")



If statements and comparison 1:54:05-2:00:30


def max_num(num1, num2, num3):
    if num1 >= num2 and num1 >= num3:
        return num1
    elif num2 >= num1 and num2 >= num3:
        return num2
    else:
        return num3
print(max(3, 4, 5))


Building a better calculator 2:00:39-2:07:11
num1 = float(input("Enter first number: "))
operator = input("Enter an operator: ")
num2 = float(input("Enter second number: "))
if operator == "+":
    print(num1 + num2)
elif operator == "-":
    print(num1 - num2)
elif operator == "*":
    print(num1 * num2)
elif operator == "/":
    print(num1 / num2)
else:
    print("Invalid operator")

Dictionaries 02:07:14-02:14:10
#programme to convert a 3 digit month name to full month name
month_Conversions = {
    "Jan": "January",
    "Feb": "February",
    "Mar": "March",
    "Apr": "April",
    "May": "May",
    "Jun": "June",
    "Jul": "July",
    "Aug": "August",
    "Sep": "September",
    "Oct": "October",
    "Nov": "November",
    "Dec": "December"
}
#test
print(month_Conversions)
print(month_Conversions["Jan"])
print(month_Conversions.get("Dec"))
print(month_Conversions.get("Not found"))

While Loop 02:14:16-02:20:00

i = 1
while i <= 10:
    print(i)
    i = i + 1

Building guessing game 02:20:03-02:32:40

secret_word = "giraffe"
guess = ""
while guess != secret_word:
    guess = input(("Enter a guess word: "))
print("You win the guess")



# x tries of guess
secret_word = "giraffe"
guess = ""
guess_count = 0
guess_limit = 3
outOf_guesses = False

while guess != secret_word and not(outOf_guesses):
    if guess_count < guess_limit:
        guess = input("Enter a guess word: ")
        guess_count += 1
    else:
      outOf_guesses = True
if outOf_guesses:
   print("Out of guesses, You loose1")
else:
 print("You win the guess")

#Algorithms for the Guess Game
!
Name: Guess game

1. targer giraffe (secret_word)
2. Guess i.e guess to meet the target (guess)
3. Guess limit i.e guess max (guess_limit)
4. Guess count i.e the guess use a while from (guess) to (guess_limit)
5. Exit the program i.e set a variable to false if 1 or 3 are met
!

09-11-2023 For Loop 02:32:46-02:41:20
for letter in "Giraffe Academy":
    print(letter)

friends = ["Jim", "Karen", "Kevin"]
for friend in friends:
    print(friend)

for index in range(20):
    print(index)

for index in range(15, 20):
    print(index)
    print(len(friends))

for index in range(5):
    if index == 0:
        print("Outputing 1st iteration of the loop")
    elif index == 1:
        print("Outputing 2nd iteration of the loop")
    elif index == 2:
        print("Outputing 3rd iteration of the loop")
    elif index == 3:
        print("Outputing 4th iteration of the loop")
    else:
        print("Outputing 5th or last iteration of the loop")

Exponent Fnx 02:41:22-02:47:05
print(2**3)

def raise_to_power(base_num, pow_num):
    result = 1
    for index in range(pow_num):
        result = result * base_num
    return result
print(raise_to_power(3, 2))

def raise_to_power(base_num, pow_num):
    result = 1
    for index in range(pow_num):
        result = result * base_num
    return result
print(raise_to_power(3, 3))


2D Lists & Nested Loops 02:47:14-02:52:35


number_grid = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
    [0]
]
#return all the elements
print(number_grid)
#return [1, 2, 3]
print(number_grid[0])
#return 2 from [1, 2, 3]
print(number_grid[0][1])

for row in number_grid:
    for column in row:
        print(column)

Build a Translator 02:52:42-03:00:18
#Giraffe Language
def translate(phrase):
    translation = ""
    for  letter in phrase:
        if letter.lower() in "AEIOUaeiou":
            if letter.isupper():
                translation = translation + "G"
            else:
                translation = translation + "g"

        else:
            translation = translation + letter
    return translation
print(translate("Salieu"))
print(translate("kyle"))


Comment in Python 03:00:20-03:04:15

#Comment
print("A comment has just been given ablove")
'''
A multi line comment
'''
print("A multi line comment is given above")


Try Except 03:04:20-03:12:40



try:
    number = int(input("Enter a number: "))
    print(number)
except:
    print("You enter an invaid input")

try:
    value = 10 / 0
    number = int(input("Enter a number: "))
    print(number)
except ZeroDivisionError as err:
    print(err)
except ValueError:
    print("You enter an invaid input")


10-11-2023 Reading Files 03:12:42-03:21:20

Text File
!
Jim - Salesman
Dwight - Salesman
Pam - Receptionist
!

employee_file = open("Giraffe/employee.txt", "r")
print(employee_file.readable())
employee_file.close()

#True
print(employee_file.read())
employee_file.close()

print(employee_file.readline())
print(employee_file.readline())
employee_file.close()

print(employee_file.readlines())
#i.e store the output inside array
employee_file.close()

print(employee_file.readlines()[0])
#i.e store the output inside array 0
employee_file.close()

#use for loop to go through all the lines
for employee in employee_file.readlines():
    print(employee)
employee_file.close()

Writing to a File 03:21:30-03:28:10
#Append to the file and in a new line
employee_file.write("\nToby - Human Resources")
employee_file.close()

#Write to a file and remove the content in it
employee_file.write("John Doe - IT Department")
employee_file.close()


employee_file = open("Giraffe/index.html", "w")
#Create a new file and write in it
employee_file.write("<h1>This is an HTML File</h1>")
employee_file.close()

Modules and Pip 03:28:15-03:43:55


useful_tools.py file

!
import random
feet_in_mile = 5280
meters_in_kilometer = 1000
beatles = ["John Lennon", "Paul McCartney", "George Harrison", "Ringo Star"]

def get_glie_exe(filename):
    return filename[filename.index(".") + 1:]

def roll_dice(num):
    return random.randint(1, num)
!



Classes & Objects 03:43:58-


